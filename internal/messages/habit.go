package messages

import (
	"HabitsBot/internal/models"
	"fmt"
)

var (
	CancelCreateHabitMsg = "–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏."
	ErrorCreateHabitMsg  = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–∏–≤—ã—á–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑."
)

func BeforeCreateHabitMsg(name string) string {
	return fmt.Sprintf("–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–π –ø—Ä–∏–≤—ã—á–∫–∏: <b>%s</b>. –°–æ–∑–¥–∞—ë–º?", name)
}

func HabitCreatedMsg(name string) string {
	return "<b>–ü—Ä–∏–≤—ã—á–∫–∞ \"" + name + "\" —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!</b>  ü•≥"
}

func HabitListMsg(habits []models.Habit) string {
	var msg string

	if len(habits) > 0 {
		msg = "<b>C–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –ø—Ä–∏–≤—ã—á–µ–∫  ‚§µÔ∏è</b>\n\n" +
			"–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∏–≤—ã—á–∫—É, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ —Å–ø–∏—Å–∫–µ"
	} else {
		msg = "–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –ø—É—Å—Ç. –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –ø—Ä–∏–≤—ã—á–∫—É - " + "/add_new_habit"
	}

	return msg
}

func HabitDetailMsg(habit models.Habit) string {
	return "–í–∞—à–∞ –ø—Ä–∏–≤—ã—á–∫–∞: <b>" + habit.Title + "</b>\n\n" +
		"–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å –Ω–µ–π?"
}

func listItemsWithCommas(items []string) string {
	msg := ""

	for i, item := range items {
		msg += item
		if i != len(items)-1 {
			msg += ", "
		}
	}

	return msg
}
